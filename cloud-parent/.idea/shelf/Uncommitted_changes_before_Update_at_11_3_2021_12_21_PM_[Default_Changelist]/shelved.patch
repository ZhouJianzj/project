Index: ../common-api/src/main/java/com/zj/entity/Log.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.zj.entity;\r\n\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\n\r\nimport java.util.Date;\r\n\r\n\r\n/**\r\n * @author zhoujian\r\n */\r\n@Data\r\n@NoArgsConstructor\r\n@AllArgsConstructor\r\npublic class Log {\r\n\r\n    private Integer id;\r\n    private String username;\r\n    private String operType;\r\n    private String moduleName;\r\n    private String result;\r\n    private Date operTimer;\r\n    private String operContent;\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../common-api/src/main/java/com/zj/entity/Log.java	(revision b6fc236e4b0930b0947a5cb3f7c6ade3ab21a587)
+++ ../common-api/src/main/java/com/zj/entity/Log.java	(date 1635913042272)
@@ -19,7 +19,7 @@
     private String username;
     private String operType;
     private String moduleName;
-    private String result;
+    private boolean result;
     private Date operTimer;
     private String operContent;
 
Index: ../gateway/src/main/java/com/zj/gateway/GatewagApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.zj.gateway;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.cloud.client.discovery.EnableDiscoveryClient;\r\nimport org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession;\r\nimport org.springframework.session.data.redis.config.annotation.web.server.EnableRedisWebSession;\r\n\r\n/**\r\n * @author zhoujian\r\n */\r\n@SpringBootApplication\r\n@EnableDiscoveryClient\r\npublic class GatewagApplication {\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(GatewagApplication.class, args);\r\n    }\r\n\r\n}\r\n
===================================================================
--- ../gateway/src/main/java/com/zj/gateway/GatewagApplication.java	(revision b6fc236e4b0930b0947a5cb3f7c6ade3ab21a587)
+++ ../gateway/src/main/java/com/zj/gateway/GatewayApplication.java	(date 1635913042290)
@@ -3,18 +3,16 @@
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
 import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
-import org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession;
-import org.springframework.session.data.redis.config.annotation.web.server.EnableRedisWebSession;
 
 /**
  * @author zhoujian
  */
 @SpringBootApplication
 @EnableDiscoveryClient
-public class GatewagApplication {
+public class GatewayApplication {
 
     public static void main(String[] args) {
-        SpringApplication.run(GatewagApplication.class, args);
+        SpringApplication.run(GatewayApplication.class, args);
     }
 
 }
Index: ../gateway/src/main/java/com/zj/gateway/filter/Filter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.zj.gateway.filter;\r\n\r\n\r\nimport com.alibaba.fastjson.JSON;\r\nimport org.apache.catalina.User;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.cloud.gateway.filter.GatewayFilterChain;\r\nimport org.springframework.cloud.gateway.filter.GlobalFilter;\r\nimport org.springframework.core.Ordered;\r\nimport org.springframework.core.io.buffer.DataBuffer;\r\nimport org.springframework.http.HttpCookie;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.server.RequestPath;\r\nimport org.springframework.http.server.ServletServerHttpRequest;\r\nimport org.springframework.http.server.reactive.ServerHttpRequest;\r\nimport org.springframework.http.server.reactive.ServerHttpResponse;\r\nimport org.springframework.session.data.redis.RedisSessionRepository;\r\nimport org.springframework.stereotype.Component;\r\nimport org.springframework.web.server.ServerWebExchange;\r\nimport org.springframework.web.server.WebSession;\r\nimport reactor.core.publisher.Mono;\r\n\r\nimport javax.annotation.Resource;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpSession;\r\nimport java.net.URI;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\n\r\n/**\r\n * @author zhoujian\r\n * 全局的过滤器实现权限验证\r\n */\r\n@Component\r\npublic class Filter implements GlobalFilter, Ordered {\r\n    private static final String PATH = \"/sys/login\";\r\n    private static final String CHARSET_NAME = \"utf-8\";\r\n\r\n\r\n    @Override\r\n    public int getOrder() {\r\n        return 0;\r\n    }\r\n\r\n    @Override\r\n    public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) {\r\n\r\n        //获取session\r\n        ServerHttpRequest request = exchange.getRequest();\r\n        ServerHttpResponse response = exchange.getResponse();\r\n\r\n        // 获取请求路径\r\n        String path = request.getPath().toString();\r\n        //获取cookie中的sessionid\r\n        HttpCookie sessionid = request.getCookies().getFirst(\"sessionid\");\r\n\r\n        // 判断是否为/sys/login\r\n        if (path.contains(PATH)) {\r\n            //  请求路径中含有/login,则放行\r\n            return chain.filter(exchange);\r\n        } else if (null != sessionid){\r\n            // 登录之后就放行,获取共享的session，有就放行\r\n            return chain.filter(exchange); \r\n        }\r\n        //什么都没有则返回友好提示页面\r\n        else {\r\n            // 响应结果，响应数据为JSON数据\r\n            HashMap data = new HashMap();\r\n            DataBuffer buffer = null;\r\n            try {\r\n                data.put(\"code\", 404);\r\n                data.put(\"msg\", \"请先登录\");\r\n                byte[] bytes = JSON.toJSONString(data).getBytes(CHARSET_NAME);\r\n                buffer = response.bufferFactory().wrap(bytes);\r\n                response.setStatusCode(HttpStatus.UNAUTHORIZED);\r\n                response.getHeaders().add(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n            return response.writeWith(Mono.just(buffer));\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../gateway/src/main/java/com/zj/gateway/filter/Filter.java	(revision b6fc236e4b0930b0947a5cb3f7c6ade3ab21a587)
+++ ../gateway/src/main/java/com/zj/gateway/filter/Filter.java	(date 1635913042285)
@@ -2,30 +2,19 @@
 
 
 import com.alibaba.fastjson.JSON;
-import org.apache.catalina.User;
-import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.cloud.gateway.filter.GatewayFilterChain;
 import org.springframework.cloud.gateway.filter.GlobalFilter;
 import org.springframework.core.Ordered;
 import org.springframework.core.io.buffer.DataBuffer;
 import org.springframework.http.HttpCookie;
 import org.springframework.http.HttpStatus;
-import org.springframework.http.server.RequestPath;
-import org.springframework.http.server.ServletServerHttpRequest;
 import org.springframework.http.server.reactive.ServerHttpRequest;
 import org.springframework.http.server.reactive.ServerHttpResponse;
-import org.springframework.session.data.redis.RedisSessionRepository;
 import org.springframework.stereotype.Component;
 import org.springframework.web.server.ServerWebExchange;
-import org.springframework.web.server.WebSession;
 import reactor.core.publisher.Mono;
 
-import javax.annotation.Resource;
-import javax.servlet.http.HttpServletRequest;
-import javax.servlet.http.HttpSession;
-import java.net.URI;
 import java.util.HashMap;
-import java.util.List;
 
 /**
  * @author zhoujian
Index: ../sys-manager/target/classes/com/zj/dao/SysDao.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<!DOCTYPE mapper\r\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\r\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\r\n<mapper namespace=\"com.zj.dao.SysDao\">\r\n<!--    用户登录sql-->\r\n    <resultMap id=\"user_map\" type=\"com.zj.entity.UserManager\">\r\n<!--        用户信息-->\r\n        <id column=\"id\" property=\"id\"/>\r\n        <result column=\"username\" property=\"username\"/>\r\n        <result column=\"password\" property=\"password\"/>\r\n        <result column=\"salt\" property=\"salt\"/>\r\n        <result column=\"phone\" property=\"phone\"/>\r\n<!--        用户所在的公司-->\r\n        <association property=\"o\" javaType=\"com.zj.entity.Organize\">\r\n            <id column=\"id\" property=\"id\"/>\r\n            <result column=\"organame\" property=\"name\"/>\r\n        </association>\r\n<!--       用户____> 角色表____>角色实体集 -->\r\n        <collection property=\"roles\" ofType=\"com.zj.entity.Role\">\r\n            <result column=\"rolename\" property=\"name\"/>\r\n            <result column=\"ext\" property=\"ext\"/>\r\n<!--         角色表____>权限表_____>权限实体集-->\r\n            <collection  property=\"perms\" ofType=\"com.zj.entity.Perm\">\r\n                <result column=\"permname\" property=\"name\"/>\r\n            </collection>\r\n        </collection>\r\n    </resultMap>\r\n    <select id=\"userSelect\" resultMap=\"user_map\">\r\n        SELECT\r\n            u.id,\r\n            u.username,\r\n            u.password,\r\n            u.salt,\r\n            u.phone,\r\n            o.NAME AS organame,\r\n            r.NAME AS rolename,\r\n            r.ext,\r\n            p.NAME AS permname\r\n        FROM\r\n            t_user u\r\n            LEFT JOIN organize o ON o.id = u.orga_id\r\n            LEFT JOIN t_user_role ur ON ur.userid = u.id\r\n            LEFT JOIN t_role r ON r.id = ur.roleid\r\n            LEFT JOIN t_role_perms rp ON rp.role_id = r.id\r\n            LEFT JOIN t_perms p ON p.id = rp.perm_id\r\n        where\r\n            u.username = #{username} and  u.password= #{password}\r\n    </select>\r\n\r\n<!--    机构查询根据机构名称模糊查询，支持分页，page-->\r\n    <resultMap id=\"orga_type_map\" type=\"com.zj.entity.Organize\">\r\n        <id column=\"id\" property=\"id\"/>\r\n        <result column=\"name\" property=\"name\"/>\r\n<!--        公司的父公司-->\r\n        <result column=\"parentorganame\" property=\"parentName\"/>\r\n       <result column=\"location\" property=\"location\"/>\r\n        <result column=\"organum\" property=\"orgaNumber\"/>\r\n        <result column=\"ext\" property=\"ext\"/>\r\n<!--        公司的类型-->\r\n        <association property=\"orgaType\" javaType=\"com.zj.entity.OrgaType\">\r\n            <result column=\"orgatypename\" property=\"name\"/>\r\n        </association>\r\n    </resultMap>\r\n    <select id=\"organizeSelect\" resultMap=\"orga_type_map\" >\r\n    SELECT\r\n        o1.id,\r\n        o1.name,\r\n        o2.name as parentorganame,\r\n        ot.name as orgatypename,\r\n        o1.location,\r\n        o1.orga_number as organum,\r\n        o1.ext\r\n    FROM\r\n        organize o1\r\n        JOIN orga_type ot ON ot.id = o1.id\r\n        left join organize o2 on o2.id = o1.parent_id\r\n\twhere o1.name like concat(#{orgName},'%')\r\n    </select>\r\n\r\n<!--    机构插入-->\r\n    <insert id=\"organizeInsert\" >\r\n        insert  into organize\r\n        (name , parent_id, type_id, location, orga_number, ext)\r\n        values\r\n        (#{name},#{parentId},#{typeId},#{location},#{orgaNumber},#{ext})\r\n    </insert>\r\n\r\n<!--    查询角色-->\r\n    <select id=\"roleSelect\" resultType=\"com.zj.entity.Role\">\r\n        select\r\n        id,name,ext from t_role\r\n        where name like concat(#{roleName},'%')\r\n    </select>\r\n\r\n<!--    新增角色-->\r\n    <insert id=\"RoleInsert\" >\r\n        insert into t_role\r\n        (name,ext)\r\n        values\r\n        (#{name},#{ext})\r\n    </insert>\r\n\r\n<!--    查询所用的权限-->\r\n    <select id=\"permSelect\" resultType=\"com.zj.entity.Perm\">\r\n        select id,name from t_perms\r\n    </select>\r\n\r\n<!--    角色权限添加-->\r\n    <insert id=\"rolePermInsert\" >\r\n        insert into t_role_perms\r\n        (role_id,perm_id)\r\n        values (#{roleId},#{permId})\r\n    </insert>\r\n\r\n<!--    删除角色-->\r\n    <delete id=\"roleDelete\">\r\n        DELETE t_role,\r\n            t_role_perms,\r\n            t_user_role\r\n        FROM\r\n\t    t_role\r\n\t        INNER JOIN t_role_perms ON t_role_perms.role_id = t_role.id\r\n\t        INNER JOIN t_user_role ON t_user_role.roleid = t_role.id\r\n        WHERE\r\n\t        t_role.id = #{id}\r\n    </delete>\r\n\r\n<!--    根据手机号或者是用户name模糊查询用户-->\r\n    <select id=\"userKeySelect\" resultMap=\"user_map\">\r\n        SELECT\r\n            u.id,\r\n            u.username,\r\n            u.password,\r\n            u.salt,\r\n            u.phone,\r\n            o.NAME AS organame,\r\n            r.NAME AS rolename,\r\n            r.ext,\r\n            p.NAME AS permname\r\n        FROM\r\n            t_user u\r\n            LEFT JOIN organize o ON o.id = u.orga_id\r\n            LEFT JOIN t_user_role ur ON ur.userid = u.id\r\n            LEFT JOIN t_role r ON r.id = ur.roleid\r\n            LEFT JOIN t_role_perms rp ON rp.role_id = r.id\r\n            LEFT JOIN t_perms p ON p.id = rp.perm_id\r\n        where\r\n            u.username like concat(#{key},'%') or u.phone like concat(#{key},'%')\r\n    </select>\r\n\r\n<!--    根据id查询用户-->\r\n    <select id=\"userIdSelect\" resultMap=\"user_map\">\r\n         SELECT\r\n            u.id,\r\n            u.username,\r\n            u.password,\r\n            u.salt,\r\n            u.phone,\r\n            o.NAME AS organame,\r\n            r.NAME AS rolename,\r\n            r.ext,\r\n            p.NAME AS permname\r\n        FROM\r\n            t_user u\r\n            LEFT JOIN organize o ON o.id = u.orga_id\r\n            LEFT JOIN t_user_role ur ON ur.userid = u.id\r\n            LEFT JOIN t_role r ON r.id = ur.roleid\r\n            LEFT JOIN t_role_perms rp ON rp.role_id = r.id\r\n            LEFT JOIN t_perms p ON p.id = rp.perm_id\r\n        where\r\n           u.id = #{id}\r\n    </select>\r\n    \r\n</mapper>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../sys-manager/target/classes/com/zj/dao/SysDao.xml	(revision b6fc236e4b0930b0947a5cb3f7c6ade3ab21a587)
+++ ../sys-manager/target/classes/com/zj/dao/SysDao.xml	(date 1635912406718)
@@ -171,5 +171,5 @@
         where
            u.id = #{id}
     </select>
-    
+
 </mapper>
\ No newline at end of file
